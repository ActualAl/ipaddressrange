<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.4;net45</TargetFrameworks>
    <NoWarn>$(NoWarn);1591</NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release'">true</GeneratePackageOnBuild>
    <AssemblyName>IPAddressRange</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
    <Title>IPAddressRange</Title>
    <PackageId>IPAddressRange</PackageId>
    <PackageTags>IPAddress</PackageTags>
    <NetStandardImplicitPackageVersion>1.6.0</NetStandardImplicitPackageVersion>
    <PackageTargetFallback>$(PackageTargetFallback);dnxcore50</PackageTargetFallback>
    <NuspecFile>IPAddressRange.nuspec</NuspecFile>
    <Copyright>Copyright © 2012-2018 J.Sakamoto, Mozilla Public License 2.0</Copyright>
    <AssemblyVersion>3.0.0.1</AssemblyVersion>
    <FileVersion>3.0.0.1</FileVersion>
    <Version>3.0.0.1</Version>
    <Authors>J.Sakamoto</Authors>
    <Company />
    <Product>IPAddressRange</Product>
    <Summary>This library allows you to parse range of IP address string, and can conatins check.</Summary>
    <Description>This library allows you to parse range of IP address string such as "192.168.0.0/24" and "192.168.0.0/255.255.255.0" and "192.168.0.0-192.168.0.255", and can conatins check. This library supports both IPv4 and IPv6.</Description>
    <PackageLicenseUrl>https://github.com/jsakamoto/ipaddressrange/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/jsakamoto/ipaddressrange/</PackageProjectUrl>
    <PackageReleaseNotes>v.3.0.0 - Sign the assembly. (make it to strong-named assembly.)
v.2.2.0 - Enhance: IPv4 shortcut notation support (like "192.168.0.0-255").
v.2.1.1 - Fix: Error if parsing IP address with scope id in the end.
v.2.1.0 - Enhance: Add "IsEqual" and "Decrement" methods to "Bits" utility class.
v.2.0.0 - [BREAKING CHANGE] Truncate .NET 4.0 support.
        - Enhance: can serialize/deserialize json text by JSON.NET
v.1.6.2 - Support: .NET Standard 1.4 (.NET Core) and UWP
v.1.6.1 - Fix: Add some parameter checks for throwing ArgumentNullException
v.1.6.0 - Enhance: Add "ToCidrString()" and "GetprefixLength()" method.
v.1.5.0 - Enhance: Add constructors variation / Save memory usage.
v.1.4.0 - Enhance: Add IEnumerable&lt;IPAddress&gt; support.
v.1.3.0 - Enhance: support both "hyphen (-)" (0x002D) and "dash (–)" (0x2013) at begin-end format.
v.1.2.1 - Fix: "Parse()" and "TryParse()" methods throw IndexOutOfRangeException when bit mask length is invalid at CIDR format.
v.1.2.0 - Enhance: Add "Parse()" and "TryParse()" methods. (Instead, the constructor which has one string argument is obsoleted.)
v.1.1.0 - Enhance: Add "Contains()" method overload version of IPAddressRange argument.
v.1.0.6 - Fix Package: Repackage with Release build. (1.0.5 was Debug build)
v.1.0.5 - Fix: IPv4 CIDR range ".../32" causes crush.
v.1.0.4 - Enhance: support bit mask range not only CIDR range.
v.1.0.3 - Fix: Can not parse the address which contains hex string.
</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup>
    <SharedNuspecProperties>packageId=$(PackageId);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>version=$(Version);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>authors=$(Authors);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>licenseUrl=$(PackageLicenseUrl);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>projectUrl=$(PackageProjectUrl);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>copyright=$(Copyright);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>tags=$(PackageTags);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>summary=$(Summary);$(SharedNuspecProperties)</SharedNuspecProperties>
    <SharedNuspecProperties>releaseNotes=$(PackageReleaseNotes);$(SharedNuspecProperties)</SharedNuspecProperties>
  </PropertyGroup>
  
  <PropertyGroup>
    <NuspecProperties>title=$(Title);$(SharedNuspecProperties)</NuspecProperties>
    <NuspecProperties>description=$(Description);$(NuspecProperties)</NuspecProperties>
  </PropertyGroup>
  
  <!-- Build Signed Editon NuGet package -->
  <Target Name="PackSignedEdition" AfterTargets="GenerateNuspec">
    <PropertyGroup>
      <NuspecFile>IPAddressRange.Signed.nuspec</NuspecFile>
      <TitleForSignedEdition>[Superseded] IPAddressRange.Signed</TitleForSignedEdition>
      <DescriptionForSignedEdition>[Superseded] This package became  only metadata package for installing "IPAddressRange" NuGet package, because "IPAddressRange" NuGet package became strong-named assembly.
Please consider to installing "IPAddress" NuGet package directly instead of this package.
----------------------------
$(Description)</DescriptionForSignedEdition>
      <NuspecProperties>title=$(TitleForSignedEdition);$(SharedNuspecProperties)</NuspecProperties>
      <NuspecProperties>description=$(DescriptionForSignedEdition);$(NuspecProperties)</NuspecProperties>
    </PropertyGroup>
    <ConvertToAbsolutePath Paths="$(NuspecFile)">
      <Output TaskParameter="AbsolutePaths" PropertyName="NuspecFileAbsolutePath" />
    </ConvertToAbsolutePath>
    <Message Text="PackProjectInputFile=[$(PackProjectInputFile)]" />
    <PackTask PackItem="$(PackProjectInputFile)" PackageOutputPath="$(PackageOutputAbsolutePath)" NuspecOutputPath="$(NuspecOutputAbsolutePath)" NuspecFile="$(NuspecFileAbsolutePath)" NuspecBasePath="$(NuspecBasePath)" NuspecProperties="$(NuspecProperties)" />
  </Target>
  
</Project>
